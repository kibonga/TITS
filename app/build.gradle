/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
  // Apply the application plugin to add support for building a CLI application in Java.
  id 'application'
}

repositories {
  // Use Maven Central for resolving dependencies.
  mavenCentral()
}

dependencies {
  // Use JUnit Jupiter for testing.
  testImplementation libs.junit.jupiter

  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

  // This dependency is used by the application.
  implementation libs.guava

  // Json
  // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
  implementation("com.fasterxml.jackson.core:jackson-databind:2.18.3")

  // Yaml
  // https://mvnrepository.com/artifact/org.yaml/snakeyaml
  implementation("org.yaml:snakeyaml:2.2")

  // Lombok
  // https://mvnrepository.com/artifact/org.projectlombok/lombok
  compileOnly("org.projectlombok:lombok:1.18.36")

  annotationProcessor 'org.projectlombok:lombok:1.18.36' // za generisanje koda

  testCompileOnly 'org.projectlombok:lombok:1.18.36'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

application {
  // Define the main class for the application.
  mainClass = 'org.example.App'
}

tasks.named('test') {
  // Use JUnit Platform for unit tests.
  useJUnitPlatform()
}
